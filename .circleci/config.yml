# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference

# 1: Config file
# version: 2.1

# # Define a job to be invoked later in a workflow.
# # See: https://circleci.com/docs/2.0/configuration-reference/#jobs
# jobs:
#   say-hello:
#     # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
#     # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
#     docker:
#       - image: cimg/base:stable
#     # Add steps to the job
#     # See: https://circleci.com/docs/2.0/configuration-reference/#steps
#     steps:
#       - checkout
#       - run:
#           name: "Say hello"
#           command: "echo Hello, World!"

#   app-engineer:
#     docker:
#       - image: cimg/base:stable

#     steps:
#       - checkout
#       - run:
#           name: "App engineer"
#           command: "echo Hello, the app engineer!!"

# # Invoke jobs via workflows
# # See: https://circleci.com/docs/2.0/configuration-reference/#workflows
# workflows:
# myworkflows:
#   jobs:
#     - say-hello
#     - app-engineer

# 2: Config file
# version: 2.1
# orbs:
#   android: circleci/android@1.0.3
#   flutter: circleci/flutter@1.0
#     flutter: circleci/flutter@1.2.0
# jobs:
#   distribute:
#     macos:
#       xcode: 12.8.1
#     steps:
#       - checkout
#       - flutter/install_sdk_and_pub:
#           version: 2.2.3
#           app-dir: ./app
#       - flutter/install_ios_pod:
#           app-dir: ./app
#       - flutter/install_ios_gem:
#           app-dir: ./app
#       - run:
#           command: bundle exec fastlane ios distribute
#           working_directory: ios
# workflows:
#   distribute:
#     jobs:
#       - distribute
version: 2.1
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-30
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - run:
          name: install dependencies
          command: npm install
      - run:
          name: install dependencies
          command: npm install
      # run test suite
      - run:
          name: test
          command: npm run test
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results
